---
# ensure dependencies are installed
- name: ensure dependencies are installed
  apt:
    name:
      - curl
      - apt-transport-https
    state: present
  tags:
    - setup

# add jenkins apt repository key
- name: add jenkins apt repository key
  apt_key:
    url: "{{ jenkins_repo_key_url }}"
    state: present
  tags:
    - setup

# add jenkins apt repository
- name: add jenkins apt repository
  apt_repository:
    repo: "{{ jenkins_repo_url }}"
    state: present
    update_cache: true
  when: jenkins_repo_url != ""
  tags: ['skip_ansible_lint']

# donwnload specific jenkins version
- name: download specific Jenkins version
  get_url:
    url: "{{ jenkins_pkg_url }}/jenkins_{{ jenkins_version }}_all.deb"
    dest: "/tmp/jenkins_{{ jenkins_version }}_all.deb"
  when: jenkins_version is defined
  tags:
    - setup

# checking the downloaded a specific version of Jenkins 
- name: check if we downloaded a specific version of jenkins
  stat:
    path: "/tmp/jenkins_{{ jenkins_version }}_all.deb"
  register: specific_version
  when: jenkins_version is defined
  tags:
    - setup

# install the scpecific jenkins version
- name: install the specific version of jenkins
  apt:
    deb: "/tmp/jenkins_{{ jenkins_version }}_all.deb"
    state: present
  when: jenkins_version is defined and specific_version.stat.exists
  notify: configure default users
  tags:
    - update

# ensure jenkins is installed
- name: ensure jenkins is installed
  apt:
    name: jenkins
    state: "{{ jenkins_package_state }}"
    allow_unauthenticated: yes 
  notify: configure default users
  tags:
    - update
